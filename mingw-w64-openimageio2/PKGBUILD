# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=openimageio
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.0.8
pkgrel=1.6
pkgdesc="A library for reading and writing images, including classes, utilities, and applications (mingw-w64)"
arch=('any')
url="http://www.openimageio.org/"
license=("custom")
depends=("${MINGW_PACKAGE_PREFIX}-boost"
         #"${MINGW_PACKAGE_PREFIX}-field3d"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-jasper"
         "${MINGW_PACKAGE_PREFIX}-giflib"
         "${MINGW_PACKAGE_PREFIX}-glew"
         #"${MINGW_PACKAGE_PREFIX}-hdf5"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-LibRaw-gpl2"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-opencolorio"
         #"${MINGW_PACKAGE_PREFIX}-opencv"
         "${MINGW_PACKAGE_PREFIX}-openexr"
         "${MINGW_PACKAGE_PREFIX}-openjpeg2"
         #"${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-ptex"
         "${MINGW_PACKAGE_PREFIX}-pugixml"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             #"${MINGW_PACKAGE_PREFIX}-qt5"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "${MINGW_PACKAGE_PREFIX}-pybind11"
             "git")
#optdepends=(#"${MINGW_PACKAGE_PREFIX}-qt5: iv image viewer"
#            "${MINGW_PACKAGE_PREFIX}-python3: bindings support")
options=('strip' 'buildflags' '!debug')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/OpenImageIO/oiio/archive/Release-${pkgver}.tar.gz
        git+https://github.com/OpenImageIO/oiio-images.git
        0000-fix-mingw-w64.patch
        0000-workaround-ansidecl-h-PTR-define-conflict.patch
        0001-MinGW-w64-include-winbase-h-early-for-TCHAR-types.patch
        0004-guard-msvc-stuff.patch
        0006-fix-intrinistic-conflict.patch
        0007-find-pugixml.patch
        0008-find-openjpeg.patch
        0009-msvcrt-dont-have-create-locale.patch
        0011-fix-casting.patch
        0012-maybe-uninitialized-errors.patch
        0013-invalidatespec.patch
	1de4f37c8da084027e7393cdb46824c530ceb0db.patch)
sha256sums=('3c4794b0e8674728389363de291bada25ff86b4a6f5582380ed2def1ca2e07ae'
            'SKIP'
            'ea3f56a4ff58439ee3364116f69e33afcf2ad216a8ba6d5df2cdceff9406d424'
            'ab6bde02c0c05495a9cb13441535d42f4d5929bd930859d75f589d12be9a182b'
            'b7cc78d0f535ceb1aba68b11970c32ffbf04815d229b12e64e2c2c0b3403b4b2'
            'a8d1f0182c82c5d2605a549829c38ec3880930f6a1194ea4c9b173cdf611d478'
            'ced593b71fab9db63fc692173dfd7625c6812d18e5a6a69e872a746e0857358c'
            'b5db09ae6931dde76b94f09ce53b1684260a928d0af5920ae54520975b69d6d8'
            'c644153bd6dbca0eff5b70c0bc3241faae0eb90f1bb0cf1f502bb0553a73223e'
            'c6bee0a0c3fcb243e57870c68ae69d60d17819ae0fd60ac3c7bdb50951b4bcd1'
            'f006ddd0b0a3660ba074eee970af0e7d1c0538528c56166e06a1ded30413f635'
            'bc37ea8326f7f5f26068051b537f2491e9554a380e6584bf55aaad111d33eb81'
            'd9c2e066ce0e94404d31fd649341cc0ee03faf9b4023dfcdf5cf59fbbf466127'
	    '3a5f79f84bd183939fe9ba13a6ddd149f4ef5b2ab5e940bfa3480e9bcd5d7f47')

prepare() {
  cd ${srcdir}/oiio-Release-${pkgver}
  patch -p1 -i ${srcdir}/0000-fix-mingw-w64.patch
  patch -p1 -i ${srcdir}/0000-workaround-ansidecl-h-PTR-define-conflict.patch
  patch -p1 -i ${srcdir}/0001-MinGW-w64-include-winbase-h-early-for-TCHAR-types.patch
  patch -p1 -i ${srcdir}/0004-guard-msvc-stuff.patch
  patch -p1 -i ${srcdir}/0006-fix-intrinistic-conflict.patch
  patch -p1 -i ${srcdir}/0007-find-pugixml.patch
  patch -p1 -i ${srcdir}/0008-find-openjpeg.patch
  patch -p1 -i ${srcdir}/0009-msvcrt-dont-have-create-locale.patch
  patch -p1 -i ${srcdir}/0011-fix-casting.patch
  patch -p1 -i ${srcdir}/0012-maybe-uninitialized-errors.patch
  patch -p1 -i ${srcdir}/0013-invalidatespec.patch
  patch -p1 -i ${srcdir}/1de4f37c8da084027e7393cdb46824c530ceb0db.patch
}

build() {
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  [[ -d "build-${MINGW_CHOST}" ]] && rm -rf "build-${MINGW_CHOST}"
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}

  local _pyver=$(${MINGW_PREFIX}/bin/python3 -c "import sys;sys.stdout.write('.'.join(map(str, sys.version_info[:2])))")

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  PKG_CONFIG_PATH="${MINGW_PREFIX}/libraw-gpl2/lib/pkgconfig:${PKG_CONFIG_PATH}" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DUSE_FFMPEG=OFF \
    -DUSE_OPENJPEG=ON \
    -DUSE_FREETYPE=ON \
    -DUSE_OPENCV=OFF \
    -DUSE_FIELD3D=OFF \
    -DUSE_OPENSSL=OFF \
    -DUSE_GIF=ON \
    -DUSE_LIBRAW=ON \
    -DUSE_NUKE=OFF \
    -DSTOP_ON_WARNING=OFF \
    -DOPENEXR_HOME=${MINGW_PREFIX} \
    -DILMBASE_HOME=${MINGW_PREFIX} \
    -DBOOST_ROOT=${MINGW_PREFIX} \
    -DTHIRD_PARTY_TOOLS_HOME=${MINGW_PREFIX} \
    -DOPENJPEG_HOME=${MINGW_PREFIX} \
    -DOPENJPEG_INCLUDE_DIR=`pkg-config --variable=includedir libopenjp2` \
    -DUSE_QT=OFF \
    -DPYTHON_VERSION=${_pyver} \
    -DUSE_EXTERNAL_PUGIXML=ON \
    -DCMAKE_SHARED_LINKER_FLAGS=" -Wl,--export-all-symbols -Wl,--enable-auto-import " \
    -DOIIO_BUILD_TESTS=ON \
    ${extra_config} \
    ../oiio-Release-${pkgver}

  make
}

package() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install
  install -Dm644 ${srcdir}/oiio-Release-${pkgver}/LICENSE.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.md"
  install -Dm644 ${srcdir}/oiio-Release-${pkgver}/LICENSE-THIRD-PARTY.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-THIRD-PARTY.md"
}
